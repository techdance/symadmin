# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en' 
    environment: prod
    debug: false
    upload_directory: '%kernel.project_dir%/public/uploads/'
    available_builder_fields:
        - text
        - textarea
        - number
        - select
        - radio-group
        - checkbox-group
        - date
        - file
        - button
    disabled_builder_fields:
        - autocomplete
        - paragraph
        - header
        - hidden
    allowed_types:
        - 'text'
        - 'email'
        - 'textarea'
        - 'number'
        - 'select'
        - 'checkbox-group'
        - 'radio-group'
        - 'date'
        - 'file'
        - 'button'
        - 'submit'
        - 'reset'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: false # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']
        
    # Twig extension
    App\Twig\AppExtension:
        tags:
          - { name: twig.extension }

    App\Kernel:
        $environment: prod
        $debug: false

    App\EventListener\EasyAdminListener:
        public: false
        tags:
          - { name: kernel.event_listener, event: kernel.controller }
    
    easyadmin.rolepermission.manager:
        class: App\Manager\RolePermissionManager
        autowire: true

    user.manager:
        class: App\Manager\UserManager
        autowire: true
    
    App\Form\FormType:
        arguments:
            $allowedTypes: '%allowed_types%'

    App\Service\FileUploader:
        arguments:
            $targetDirectory: '%upload_directory%'

    App\Twig\BuilderExtension:
        arguments:
            $availableBuilderFields: '%available_builder_fields%'
            $allowedTypes: '%allowed_types%'
            $disabledBuilderFields: '%disabled_builder_fields%'
        tags:
            - { name: twig.extension }
    
    # easyadmin.twig.extension:
    #     class: App\Twig\EasyAdminBundleTwigExtension
    #     public: true
    #     autowire: false
    #     arguments:
    #         $configManager: '@easyadmin.config.manager'
    #         $propertyAccessor: '@property_accessor'
    #         $easyAdminRouter: '@?easyadmin.router'
    #         $logoutUrlGenerator: '@?security.logout_url_generator'
    #         $translator: '@?translator'
    #         $authorizationChecker: '@easyadmin.security.authorization_checker'
   
